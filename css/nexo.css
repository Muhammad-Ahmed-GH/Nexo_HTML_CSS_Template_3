/* start variables */
:root {
  --main-color: #2196f3;
  --main-color-alt: #1787e0;
  --light-text-color: #777;
  --main-transition-duration: 0.3s;
  --header-height: 72px;
  --section-padding: 100px;
  /* to keep the header height constant regardless of anything happens in the children */
}

/* end variables */

/* start global rules */
* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: "Cairo", sans-serif;
}

ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

.container {
  padding-left: 15px;
  padding-right: 15px;
  margin-left: auto;
  margin-right: auto;
}

/* small */
@media (min-width: 768px) {
  .container {
    width: 750px;
  }
}

/* medium */
@media (min-width: 992px) {
  .container {
    width: 970px;
  }
}

/* large */
@media (min-width: 1200px) {
  .container {
    width: 1170px;
  }
}

section {
  padding-top: var(--section-padding);
  padding-bottom: var(--section-padding);
}

/* end global rules */

/* start components */
.section-heading {
  border: 2px solid black;
  padding: 10px 20px;
  text-transform: uppercase;
  width: fit-content;
  margin: 0 auto 80px;
  font-size: 30px;
  position: relative;
  z-index: 0;
  /* to create a stacking context so the children  won't be behind*/
  transition: var(--main-transition-duration);
}

.section-heading::before,
.section-heading::after {
  content: '';
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: var(--main-color);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: -1;
}

.section-heading::before {
  left: -30px;
  transform-origin: left;
}

.section-heading::after {
  right: -30px;
  transform-origin: right;
}

.section-heading:hover {
  color: white;
  border-color: white;
  background-color: var(--main-color);
  transition-delay: 0.5s;
  /* if put in the main selector, the title will delay after the hover ends too!! */
}

.section-heading:hover::before {
  animation: heading-left-move 0.5s linear forwards;
}

.section-heading:hover::after {
  animation: heading-right-move 0.5s linear forwards;
}

@keyframes heading-left-move {
  50% {
    left: 0;
    width: 12px;
    height: 12px;
  }

  100% {
    left: 0;
    width: 50%;
    height: 100%;
    border-radius: 0;
  }
}

@keyframes heading-right-move {
  50% {
    right: 0;
    width: 12px;
    height: 12px;
  }

  100% {
    right: 0;
    width: 50%;
    height: 100%;
    border-radius: 0;
  }
}

/* end components */

/* start header */
header {
  box-shadow: 0 0 10px #ddd;
}

header .container {
  height: var(--header-height);
  /* you can set the height of header, .container, or the .logo for example */
  display: flex;
  justify-content: space-between;
  position: relative;
  /* to make the menu appear with respect to it */
}

@media (max-width: 767px) {
  header .container {
    flex-direction: column;
    align-items: center;
    --header-height: 90px;
  }
}

header .logo {
  color: var(--main-color);
  text-transform: uppercase;
  text-decoration: none;
  font-size: 26px;
  font-weight: bold;
  align-self: center;
}

@media (max-width: 767px) {
  header .logo {
    height: 50px;
    display: flex;
    align-items: center;
  }
}

header ul {
  display: flex;
}

/* the responsive part can be implemented in a different way

  you can make the flex-wrap: wrap in the container
  then you make the height of logo 100%
  then you center the nav usin margin: auto

  .container {
    flex-wrap: wrap;
  }
  instead of the media query of .container to change the flex-direction

  @media (max-width: 767px) {
    .logo {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    header ul {
      margin: auto;
    }
    more styles
  }

*/

header ul>li>a {
  /* this selector to ensure that these stylings won't be applied to unwanted children later */
  color: initial;
  text-decoration: none;
  height: 100%;
  display: flex;
  align-items: center;
  padding: 0 30px;
  /* the vertical padding is useless as the items are already centered vertically */
  /* vertical padding can cause problems in the future in the header height */
  font-size: 18px;
  position: relative;
  /* to make the upper border with ::before */
  transition: var(--main-transition-duration);
}

@media (max-width: 767px) {
  header ul>li>a {
    padding: 10px;
    font-size: 14px;
    height: calc(var(--header-height) - 50px);
  }
}

header ul li:hover>a {
  color: var(--main-color);
  background-color: #fafafa;
}

header ul>li>a::before {
  content: '';
  position: absolute;
  height: 4px;
  width: 100%;
  top: 0;
  left: 0;
  background-color: var(--main-color);
  transform-origin: left;
  transform: scaleX(0);
  transition: var(--main-transition-duration);
}

header ul li:hover>a::before {
  transform: scaleX(1);
}

/* another way to implement the ::before part

header ul>li>a {
  ...
  overflow: hidden;
}

header ul>li>a::before {
  ...
  left: -100%;
  transition: ...;
}

header ul>li>a:hover::before {
  left: 0;
}

// instead  of scaling the ::before, we move it
// and added the overflow hidden to hide the outside ::before

*/

header ul li .menu {
  display: flex;
  align-items: flex-start;
  gap: 40px;
  padding: 30px;
  position: absolute;
  right: 0;
  left: 0;
  top: calc(100% + 50px);
  background-color: white;
  border-bottom: 3px var(--main-color) solid;
  z-index: -1;
  opacity: 0;
  transition: top var(--main-transition-duration), opacity var(--main-transition-duration);
}

header ul li:hover .menu {
  opacity: 1;
  top: calc(100% + 1px);
  z-index: 100;
}

@media (max-width: 767px) {
  header ul li:hover .menu {
    display: block;
    padding: 5px;
  }
}

@media (max-width: 991px) {
  header ul li .menu .image {
    display: none;
  }
}

header ul li .menu img {
  max-width: 100%;
}

header ul li .menu .links {
  flex: 1 0 250px;
}

header ul li .menu .links a {
  display: block;
  color: var(--main-color);
  text-decoration: none;
  text-transform: capitalize;
  font-weight: bold;
  font-size: 18px;
  padding: 15px;
  position: relative;
  border-bottom: 1px solid #e9e6e6;
}

header ul li .menu .links:last-child a:last-child {
  border-bottom: none;
}

@media (min-width: 768px) {
  header ul li .menu .links a:last-child {
    border-bottom: none;
  }
}

header ul li .menu .links a::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: #fafafa;
  transition: var(--main-transition-duration);
  z-index: -1;
}

header ul li .menu .links a:hover::before {
  width: 100%;
}

header ul li .menu .links a i {
  margin-right: 10px;
}

/* end header */

/* start landing */
.landing {
  position: relative;
  overflow: hidden;
}

.landing::before {
  content: '';
  position: absolute;
  left: 0;
  top: -40px;
  width: 100%;
  height: 100%;
  background-color: #ececec;
  z-index: -1;
  transform-origin: top left;
  transform: skewY(-6deg);
}

@media (max-width: 767px) {
  .landing::before {
    top: -60px;
  }
}

.landing .container {
  height: calc(100vh - var(--header-height));
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 120px;
}

.landing .text {
  max-width: 500px;
}

@media (max-width: 991px) {
  .landing .text {
    text-align: center;
    margin: 0 auto;
  }
}

.landing .text h2 {
  font-size: 40px;
  letter-spacing: -2px;
  margin: 0px;
}

@media (max-width: 767px) {
  .landing .text h2 {
    font-size: 28px;
  }
}

.landing .text p {
  font-size: 23px;
  line-height: 1.7;
  color: rgb(102, 102, 102);
  margin: 5px 0px 0px;
}

@media (max-width: 767px) {
  .landing .text p {
    font-size: 18px;
  }
}

.landing img {
  width: 600px;
  animation: up-and-down 4s infinite alternate linear;
}

@media (max-width: 991px) {
  .landing img {
    display: none;
  }
}

.landing .go-down {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: 30px;
  color: var(--main-color);
  text-decoration: none;
  font-size: 25px;
  transition: var(--main-transition-duration);
}

.landing .go-down:hover {
  color: var(--main-color-alt);
}

.landing .go-down i {
  animation: bouncing 1.5s infinite;
}

/* end landing */

/* start articles */
.articles .container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 40px;
}

.articles .card {
  border-radius: 5px;
  overflow: hidden;
  box-shadow: 0px 2px 15px rgb(0 0 0 / 10%);
  transition: var(--main-transition-duration);
}

.articles .card:hover {
  box-shadow: 0px 2px 15px rgb(0 0 0 / 20%);
  transform: translateY(-10px);
}

.articles .card img {
  max-width: 100%;
}

.articles .card .body {
  padding: 20px;
}

.articles .card .body h3 {
  margin: 0 0 10px;
}

.articles .card .body p {
  margin: 0;
  line-height: 1.5;
  color: var(--light-text-color);
}

.articles .card .foot a {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: var(--main-color);
  text-decoration: none;
  text-transform: capitalize;
  font-weight: bold;
  padding: 20px;
  border-top: 1px solid #e6e6e7;
  position: relative;
  z-index: 0;
}

.articles .card .foot a::before {
  content: '';
  position: absolute;
  width: 0;
  height: 100%;
  left: 0;
  top: 0;
  background-color: #fafafa;
  transition: var(--main-transition-duration);
  z-index: -1;
}

.articles .card .foot a:hover::before {
  width: 100%;
}

.articles .card .foot i {
  font-size: 12px;
}

.articles .card:hover .foot i {
  animation: point-right 0.5s linear alternate infinite;
}

/* end articles */

/* start gallery */
.gallery {
  background-color: #ececec;
}

.gallery .container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 40px;
}

.gallery .card {
  /* padding: 15px;
  background-color: white; */
  border: 15px white solid;
  /* less lines | semantic ;) */
  /* box-shadow: 2px 2px 10px rgb(0 0 0 / 10%); */
  box-shadow: 0px 12px 20px rgb(0 0 0 / 13%), 0px 2px 4px rgb(0 0 0 / 12%);
}

.gallery .card .image {
  overflow: hidden;
  position: relative;
}

.gallery .card .image::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 0;
  height: 0;
  background-color: rgb(255 255 255 / 20%);
  opacity: 0;
}

.gallery .card:hover .image::after {
  animation: flashing 0.7s;
}

.gallery .card img {
  display: block;
  max-width: 100%;
  transition: transform var(--main-transition-duration);
  position: relative;
}

.gallery .card:hover img {
  transform: rotate(5deg) scale(1.1);
}

/* end gallery */

/* start features */
.features .container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 40px;
}

.features .feature {
  border: 1px solid #ccc;
  text-align: center;
  --feature-accent-color: black;
  position: relative;
}

.features .feature::before {
  content: '';
  background-color: white;
  position: absolute;

}

.features .quality {
  --feature-accent-color: #f44036;
}

.features .time {
  --feature-accent-color: #009688;
}

.features .passion {
  --feature-accent-color: #03a9f4;
}

.features .feature .image {
  position: relative;
}

.features .feature .image::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  /* background-color: rgb(244 64 54 / 60%); */
  background-color: var(--feature-accent-color);
  opacity: 60%;
}

.features .feature img {
  display: block;
  /* to remove the small space added due to inline elements */
  max-width: 100%;
}

.features .feature h3 {
  text-transform: capitalize;
  font-size: 40px;
  position: relative;
  width: fit-content;
  margin-left: auto;
  margin-right: auto;
}

.features .feature h3::after {
  content: '';
  height: 5px;
  width: 70%;
  background-color: var(--feature-accent-color);
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: -20px;
}

.features .feature p {
  line-height: 2;
  font-size: 20px;
  padding: 25px;
  color: var(--light-text-color);
}

.features .feature a {
  text-decoration: none;
  text-transform: capitalize;
  font-weight: bold;
  font-size: 22px;
  display: block;
  width: fit-content;
  margin: 0 auto 30px;
  padding: 10px 30px;
  border: 3px solid var(--feature-accent-color);
  color: var(--feature-accent-color);
  border-radius: 6px;
  background: linear-gradient(to right, var(--feature-accent-color) 50%, white 50%);
  background-size: 200%;
  background-position: right;
  transition: var(--main-transition-duration);
}

.features .feature:hover a {
  background-position: left;
  color: white;
}

/* you can also implement this fill effect using ::before */

/* end features */

/* start testimonials */
.testimonials {
  background-color: #ececec;
}

.testimonials .container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  column-gap: 40px;
  row-gap: 60px;
}

.testimonials .comment {
  background-color: white;
  border-radius: 6px;
  box-shadow: 0 2px 4px rgb(0 0 0 / 7%);
  position: relative;
  padding: 20px;
}

.testimonials .comment img {
  position: absolute;
  right: -10px;
  top: 0;
  transform: translateY(-50%);
  width: 100px;
  border-radius: 50%;
  border: solid 10px #ececec;
}

.testimonials .comment h3 {
  margin: 0;
  text-transform: capitalize;
}

.testimonials .comment h3+p {
  text-transform: capitalize;
  margin-bottom: 10px;
}

.testimonials .comment p {
  margin: 0;
  margin-top: 10px;
  color: var(--light-text-color);
  line-height: 1.5;
}

.testimonials .comment .rating .fa-solid {
  color: #ffc107;
}

/* end testimonials */

/* start team members */
.team-members .container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  column-gap: 40px;
}

.team-members .card {
  position: relative;
}

.team-members .card .body {
  background-color: #f3f3f3;
  padding-top: 60px;
}

.team-members .card .body .social {
  height: 395px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  gap: 30px;
}

.team-members .card .body .social i {
  margin: 0 20px;
}

.team-members .card img {
  height: 395px;
  position: absolute;
  right: 60px;
  top: 60px;
}

/* end team members */

/* start services */
.services {
  background-color: #ececec;
}

.services .container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  gap: 40px;
  counter-reset: serv-num;
}

.services .serv {
  counter-increment: serv-num;
  background-color: white;
  text-align: center;
  padding-top: 30px;
  box-shadow: 0 12px 20px 0 rgb(0 0 0 / 13%), 0 2px 4px 0 rgb(0 0 0 / 12%);
  transition: var(--main-transition-duration);
  position: relative;
}

.services .serv:hover {
  transform: translateY(-10px);
}

.services .serv::before {
  content: '';
  height: 3px;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  background-color: var(--main-color);
  transform-origin: center;
  transform: scaleX(0);
  transition: var(--main-transition-duration);
}

.services .serv:hover::before {
  transform: scaleX(1);
}

.services .serv i {
  font-size: 4em;
  color: #d5d5d5;
  margin-bottom: 20px;
}

.services .serv h3 {
  color: var(--main-color);
  text-transform: capitalize;
  font-size: 25px;
  margin: 0 0 40px;
}

.services .serv .foot {
  background-color: #f9f9f9;
  padding: 15px;
  text-align: right;
  position: relative;
}

.services .serv .foot::before {
  content: "0" counter(serv-num);
  background-color: var(--main-color);
  color: white;
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 80px;
  display: flex;
  align-items: center;
  font-weight: bold;
  font-size: 30px;
  padding-left: 25px;
}

.services .serv .foot::after {
  content: '';
  position: absolute;
  height: 100%;
  width: 50px;
  top: 0;
  left: 80px;
  transform: skewX(-30deg);
  background-color: #d5d5d5;
}

.services .serv .foot a {
  text-decoration: none;
  text-transform: capitalize;
  color: var(--main-color);
}

/* end services */

/* start animation */
@keyframes up-and-down {
  to {
    transform: translateY(-50px);
  }
}

@keyframes bouncing {

  20%,
  50%,
  80% {
    transform: translateY(0);
  }

  40%,
  60% {
    transform: translateY(-20px);
  }
}

@keyframes point-right {
  to {
    transform: translateX(10px);
  }
}

@keyframes flashing {

  0%,
  40% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    width: 200%;
    height: 200%;
    /* to make it look as if it goes out of the border (flashing) */
  }
}

/* end animation */